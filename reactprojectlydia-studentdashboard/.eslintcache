[{"C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\index.js":"1","C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\routes\\App.js":"2","C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\DashBoard.js":"3","C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\Nav.js":"4","C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\utils\\studentdata.js":"5","C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\StudentList.js":"6","C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\StudentListItem.js":"7","C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\About.js":"8","C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\Chart.js":"9","C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\Studentpage.js":"10"},{"size":206,"mtime":1607105382506,"results":"11","hashOfConfig":"12"},{"size":930,"mtime":1608226360004,"results":"13","hashOfConfig":"12"},{"size":1622,"mtime":1608225853021,"results":"14","hashOfConfig":"12"},{"size":788,"mtime":1607796518827,"results":"15","hashOfConfig":"12"},{"size":59090,"mtime":1607266868703,"results":"16","hashOfConfig":"12"},{"size":903,"mtime":1608226122051,"results":"17","hashOfConfig":"12"},{"size":274,"mtime":1608226217510,"results":"18","hashOfConfig":"12"},{"size":716,"mtime":1608206032599,"results":"19","hashOfConfig":"12"},{"size":4843,"mtime":1608193006736,"results":"20","hashOfConfig":"12"},{"size":227,"mtime":1608226248896,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11ev8fy",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\index.js",[],["44","45"],"C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\routes\\App.js",[],"C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\DashBoard.js",[],"C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\Nav.js",[],"C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\utils\\studentdata.js",[],"C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\StudentList.js",[],"C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\StudentListItem.js",[],"C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\About.js",[],"C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\Chart.js",["46","47"],"import React, { Component } from \"react\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  HorizontalGridLines,\r\n  VerticalBarSeries,\r\n  ChartLabel,\r\n} from \"react-vis\";\r\n\r\nclass Chart extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { checked: false, difficultyChecked: false };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const value = event.target.value;\r\n    if (value == \"funfactor\") {\r\n      this.setState({\r\n        checked: !this.state.checked,\r\n      });\r\n    } else if (value == \"difficulty\") {\r\n      this.setState({ difficultyChecked: !this.state.difficultyChecked });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // variables die ik voor zowel fun als difficulty nodig heb:\r\n    const { items } = this.props;\r\n    const assignments = items.map((item) => item.assignment);\r\n    const uniqueassignments = [...new Set(assignments)];\r\n    // functies om fun naar het juiste formaat te krijgen\r\n    const funNumbersPerAssignment = uniqueassignments.map(\r\n      (uniqueassignment) => {\r\n        const funFactor = [];\r\n        items.forEach((item) => {\r\n          if (item.assignment === uniqueassignment) {\r\n            funFactor.push(parseInt(item.funfactor));\r\n          }\r\n        });\r\n        return funFactor;\r\n      }\r\n    );\r\n    // console.log(funNumbersPerAssignment);\r\n    const funSum = funNumbersPerAssignment.map((funNumbers) =>\r\n      funNumbers.reduce((a, b) => a + b)\r\n    );\r\n    const funAverage = funSum.map(\r\n      (number) => number / funNumbersPerAssignment[0].length || 0\r\n    );\r\n    // console.log(funSum);\r\n    // console.log(funAverage);\r\n    const funFactorData = funAverage.map((y, index) => {\r\n      return { x: index, y };\r\n    });\r\n    // console.log(funFactorData);\r\n\r\n    // functies om difficulty naar het juiste formaat te krijgen.\r\n    // later nog refactoren zodat ik 1 cluster aan functies voor fun en difficulty heb?\r\n\r\n    const difficultyNumbersPerAssignment = uniqueassignments.map(\r\n      (uniqueassignment) => {\r\n        const difficulty = [];\r\n        items.forEach((item) => {\r\n          if (item.assignment === uniqueassignment) {\r\n            difficulty.push(parseInt(item.difficulty));\r\n          }\r\n        });\r\n        return difficulty;\r\n      }\r\n    );\r\n    // console.log(difficultyNumbersPerAssignment);\r\n    const difficultySum = difficultyNumbersPerAssignment.map(\r\n      (difficultyNumbers) => difficultyNumbers.reduce((a, b) => a + b)\r\n    );\r\n    const difficultyAverage = difficultySum.map(\r\n      (number) => number / difficultyNumbersPerAssignment[0].length || 0\r\n    );\r\n    // console.log(difficultySum);\r\n    // console.log(difficultyAverage);\r\n    const difficultyData = difficultyAverage.map((y, index) => {\r\n      return { x: index, y };\r\n    });\r\n\r\n    const emptyBars = funFactorData.map((item) => (item = { x: item.x, y: 0 }));\r\n    // console.log(emptyBars);\r\n    // console.log(funFactorData);\r\n    const funBars = this.state.checked ? (\r\n      <VerticalBarSeries\r\n        className=\"funfactor\"\r\n        color=\"#c99da3\"\r\n        data={funFactorData}\r\n      />\r\n    ) : (\r\n      <VerticalBarSeries data={emptyBars} />\r\n    );\r\n\r\n    const difficultyBars = this.state.difficultyChecked ? (\r\n      <VerticalBarSeries className=\"difficulty\" data={difficultyData} />\r\n    ) : (\r\n      <VerticalBarSeries data={emptyBars} />\r\n    );\r\n    return (\r\n      <div className=\"Chart\">\r\n        <XYPlot height={400} width={1350}>\r\n          <HorizontalGridLines />\r\n          {funBars}\r\n          {difficultyBars}\r\n          <XAxis />\r\n          <YAxis className=\"funfactor\" />\r\n          <YAxis className=\"difficulty\" />\r\n          <ChartLabel\r\n            text=\"Assignments\"\r\n            className=\"alt-x-label\"\r\n            includeMargin={false}\r\n            xPercent={0.025}\r\n            yPercent={1.01}\r\n          />\r\n\r\n          <ChartLabel\r\n            text=\"Funfactor & difficulty\"\r\n            className=\"alt-y-label\"\r\n            includeMargin={false}\r\n            xPercent={0.06}\r\n            yPercent={0.06}\r\n            style={{\r\n              transform: \"rotate(-90)\",\r\n              textAnchor: \"end\",\r\n            }}\r\n          />\r\n        </XYPlot>\r\n\r\n        <form>\r\n          <label>\r\n            <input\r\n              onChange={this.handleChange}\r\n              id=\"fun\"\r\n              type=\"checkbox\"\r\n              name=\"data\"\r\n              value=\"funfactor\"\r\n            />{\" \"}\r\n            Funfactor per assignment\r\n          </label>\r\n          <label>\r\n            <input\r\n              onChange={this.handleChange}\r\n              id=\"difficulty\"\r\n              type=\"checkbox\"\r\n              name=\"data\"\r\n              value=\"difficulty\"\r\n            />{\" \"}\r\n            Difficulty per assignment\r\n          </label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","C:\\Users\\Lydia van Gammeren\\Documents\\Winc Academy Front-end Opleiding\\WincAcademy_Front-end_alle_opdrachten\\reactprojectlydia-studentdashboard\\src\\views\\Studentpage.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":21,"column":15,"nodeType":"54","messageId":"55","endLine":21,"endColumn":17},{"ruleId":"52","severity":1,"message":"53","line":25,"column":22,"nodeType":"54","messageId":"55","endLine":25,"endColumn":24},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]